//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace o1Solution.LifeSouthDonor.Data
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class LifeSouthDonorModelContext : DbContext
    {
        public LifeSouthDonorModelContext()
            : base("name=LifeSouthDonorModelContext")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<BloodMobileDrive> BloodMobileDrives { get; set; }
        public virtual DbSet<DonationCenter> DonationCenters { get; set; }
        public virtual DbSet<MergedDonorSource> MergedDonorSources { get; set; }
    
        public virtual ObjectResult<p_GetDonationInformation_Result> p_GetDonationInformation(Nullable<decimal> latitude, Nullable<decimal> longitude)
        {
            var latitudeParameter = latitude.HasValue ?
                new ObjectParameter("latitude", latitude) :
                new ObjectParameter("latitude", typeof(decimal));
    
            var longitudeParameter = longitude.HasValue ?
                new ObjectParameter("longitude", longitude) :
                new ObjectParameter("longitude", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<p_GetDonationInformation_Result>("p_GetDonationInformation", latitudeParameter, longitudeParameter);
        }
    
        public virtual ObjectResult<p_GetDonationCenters_Result> p_GetDonationCenters(Nullable<decimal> latitude, Nullable<decimal> longitude)
        {
            var latitudeParameter = latitude.HasValue ?
                new ObjectParameter("latitude", latitude) :
                new ObjectParameter("latitude", typeof(decimal));
    
            var longitudeParameter = longitude.HasValue ?
                new ObjectParameter("longitude", longitude) :
                new ObjectParameter("longitude", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<p_GetDonationCenters_Result>("p_GetDonationCenters", latitudeParameter, longitudeParameter);
        }
    }
}
